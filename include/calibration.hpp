#ifndef __CALIBRATION_HPP
#define __CALIBRATION_HPP

#include "config.hpp"
/**
 * NOTE: It's recommended to use camera_calibration(float l_marker, float p_marker),
 * 	even if you have printed the default board generated by __create_board, since
 * 	the default sometimes differs with printer settings. For more info, do look at
 * 	the detailed information of each parameter.
 */
class camera_calibration {
	std::string detect_config;
	std::string calib_config;

	int32_t dict_id;
	int32_t cam_id;
	int32_t calib_flags;
	
	bool f_aspct_rtio;
	bool ref_strtgy;
	
	float l_marker;
	float p_marker;
	float aspect_ratio;

	cv::Ptr<cv::aruco::DetectorParameters> detector_params;
	std::pair<int32_t, int32_t> n_markers;


	bool __read_dconf();
	static bool write_calib_config(const std::string&, cv::Size,
		float, int, const cv::Mat &, const cv::Mat &, double);

public:
	camera_calibration(float, float);
	camera_calibration();

	void init_calib();

	inline void set_zt_flag();
	inline void set_PC_flag();
	inline void fix_aspect_ratio(float);
};


#endif	/** __CALIBRATION_HPP */